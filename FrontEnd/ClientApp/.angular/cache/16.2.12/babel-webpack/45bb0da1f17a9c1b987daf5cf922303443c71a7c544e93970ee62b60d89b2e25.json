{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/ChatApplication/FrontEnd/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as signalR from '@microsoft/signalr';\nimport * as i0 from \"@angular/core\";\nexport class ChatService {\n  constructor() {\n    this.connection = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:7006/chat\").configureLogging(signalR.LogLevel.Information).build();\n    this.connection.on(\"ReceiveMessage\", (user, message, messageTime) => {\n      console.log(\"user :\", user);\n      console.log(\"Message :\", message);\n      console.log(\"MessageTime :\", messageTime);\n    });\n    this.connection.on(\"ConnectedUser\", users => {\n      console.log(\"Users\", users);\n    });\n  }\n  //start connection\n  start() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this.connection.start();\n      } catch (error) {\n        console.log(error);\n        setTimeout(() => {\n          _this.start();\n        }, 5000);\n      }\n    })();\n  }\n  //join room\n  joinRoom(user, room) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.connection.invoke(\"JoinRoom\", {\n        user,\n        room\n      }); // calling JoinRoom method of backend by providing values as argument\n    })();\n  }\n  // send message\n  sendMessage(message) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.connection.invoke(\"SendMessage\", message);\n    })();\n  }\n  //leave chat\n  leaveChat() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4.connection.stop();\n    })();\n  }\n  static #_ = this.ɵfac = function ChatService_Factory(t) {\n    return new (t || ChatService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatService,\n    factory: ChatService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["signalR","ChatService","constructor","connection","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","on","user","message","messageTime","console","log","users","start","_this","_asyncToGenerator","error","setTimeout","joinRoom","room","_this2","invoke","sendMessage","_this3","leaveChat","_this4","stop","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\ChatApplication\\FrontEnd\\ClientApp\\src\\app\\Services\\chat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor() { \n    this.connection.on(\"ReceiveMessage\",(user:string,message:string,messageTime:string)=>{\n      console.log(\"user :\",user);\n      console.log(\"Message :\",message);\n      console.log(\"MessageTime :\",messageTime);\n    });\n\n    this.connection.on(\"ConnectedUser\",(users:any)=>{\n      console.log(\"Users\",users)\n    })\n\n  }\n\n  public connection:signalR.HubConnection = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:7006/chat\")\n  .configureLogging(signalR.LogLevel.Information).build();\n\n  //start connection\n  public async start()\n  {\n    try{\n      await this.connection.start();\n    }\n    catch(error){\n      console.log(error);\n      setTimeout(()=>{\n        this.start();\n      },5000)\n    }\n  }\n\n  //join room\n  public async joinRoom(user:string|undefined,room:string)\n  {\n    return this.connection.invoke(\"JoinRoom\",{user,room});  // calling JoinRoom method of backend by providing values as argument\n  }\n \n\n  // send message\n  public async sendMessage(message:string)\n  {\n    return this.connection.invoke(\"SendMessage\",message);\n  }\n\n\n  //leave chat\n  public async leaveChat()\n  {\n    return this.connection.stop();\n  }\n\n\n\n\n\n\n\n}\n"],"mappings":";AACA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;;AAK7C,OAAM,MAAOC,WAAW;EAEtBC,YAAA;IAaO,KAAAC,UAAU,GAAyB,IAAIH,OAAO,CAACI,oBAAoB,EAAE,CAACC,OAAO,CAAC,6BAA6B,CAAC,CAClHC,gBAAgB,CAACN,OAAO,CAACO,QAAQ,CAACC,WAAW,CAAC,CAACC,KAAK,EAAE;IAbrD,IAAI,CAACN,UAAU,CAACO,EAAE,CAAC,gBAAgB,EAAC,CAACC,IAAW,EAACC,OAAc,EAACC,WAAkB,KAAG;MACnFC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACJ,IAAI,CAAC;MAC1BG,OAAO,CAACC,GAAG,CAAC,WAAW,EAACH,OAAO,CAAC;MAChCE,OAAO,CAACC,GAAG,CAAC,eAAe,EAACF,WAAW,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACV,UAAU,CAACO,EAAE,CAAC,eAAe,EAAEM,KAAS,IAAG;MAC9CF,OAAO,CAACC,GAAG,CAAC,OAAO,EAACC,KAAK,CAAC;IAC5B,CAAC,CAAC;EAEJ;EAKA;EACaC,KAAKA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAEhB,IAAG;QACD,MAAMD,KAAI,CAACf,UAAU,CAACc,KAAK,EAAE;OAC9B,CACD,OAAMG,KAAK,EAAC;QACVN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;QAClBC,UAAU,CAAC,MAAI;UACbH,KAAI,CAACD,KAAK,EAAE;QACd,CAAC,EAAC,IAAI,CAAC;;IACR;EACH;EAEA;EACaK,QAAQA,CAACX,IAAqB,EAACY,IAAW;IAAA,IAAAC,MAAA;IAAA,OAAAL,iBAAA;MAErD,OAAOK,MAAI,CAACrB,UAAU,CAACsB,MAAM,CAAC,UAAU,EAAC;QAACd,IAAI;QAACY;MAAI,CAAC,CAAC,CAAC,CAAE;IAAA;EAC1D;EAGA;EACaG,WAAWA,CAACd,OAAc;IAAA,IAAAe,MAAA;IAAA,OAAAR,iBAAA;MAErC,OAAOQ,MAAI,CAACxB,UAAU,CAACsB,MAAM,CAAC,aAAa,EAACb,OAAO,CAAC;IAAC;EACvD;EAGA;EACagB,SAASA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAV,iBAAA;MAEpB,OAAOU,MAAI,CAAC1B,UAAU,CAAC2B,IAAI,EAAE;IAAC;EAChC;EAAC,QAAAC,CAAA,G;qBAlDU9B,WAAW;EAAA;EAAA,QAAA+B,EAAA,G;WAAX/B,WAAW;IAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}