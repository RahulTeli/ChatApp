{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/ChatApplication/FrontEnd/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\nimport { configureAbortController, configureFetch } from \"./DynamicImports\";\nexport class FetchHttpClient extends HttpClient {\n  constructor(logger) {\n    super();\n    this._logger = logger;\n    // This is how you do \"reference\" arguments\n    const fetchObj = {\n      _fetchType: undefined,\n      _jar: undefined\n    };\n    if (configureFetch(fetchObj)) {\n      this._fetchType = fetchObj._fetchType;\n      this._jar = fetchObj._jar;\n    } else {\n      this._fetchType = fetch.bind(getGlobalThis());\n    }\n    this._abortControllerType = AbortController;\n    const abortObj = {\n      _abortControllerType: this._abortControllerType\n    };\n    if (configureAbortController(abortObj)) {\n      this._abortControllerType = abortObj._abortControllerType;\n    }\n  }\n  /** @inheritDoc */\n  send(request) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Check that abort was not signaled before calling send\n      if (request.abortSignal && request.abortSignal.aborted) {\n        throw new AbortError();\n      }\n      if (!request.method) {\n        throw new Error(\"No method defined.\");\n      }\n      if (!request.url) {\n        throw new Error(\"No url defined.\");\n      }\n      const abortController = new _this._abortControllerType();\n      let error;\n      // Hook our abortSignal into the abort controller\n      if (request.abortSignal) {\n        request.abortSignal.onabort = () => {\n          abortController.abort();\n          error = new AbortError();\n        };\n      }\n      // If a timeout has been passed in, setup a timeout to call abort\n      // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\n      let timeoutId = null;\n      if (request.timeout) {\n        const msTimeout = request.timeout;\n        timeoutId = setTimeout(() => {\n          abortController.abort();\n          _this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\n          error = new TimeoutError();\n        }, msTimeout);\n      }\n      if (request.content === \"\") {\n        request.content = undefined;\n      }\n      if (request.content) {\n        // Explicitly setting the Content-Type header for React Native on Android platform.\n        request.headers = request.headers || {};\n        if (isArrayBuffer(request.content)) {\n          request.headers[\"Content-Type\"] = \"application/octet-stream\";\n        } else {\n          request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n        }\n      }\n      let response;\n      try {\n        response = yield _this._fetchType(request.url, {\n          body: request.content,\n          cache: \"no-cache\",\n          credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\",\n            ...request.headers\n          },\n          method: request.method,\n          mode: \"cors\",\n          redirect: \"follow\",\n          signal: abortController.signal\n        });\n      } catch (e) {\n        if (error) {\n          throw error;\n        }\n        _this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\n        throw e;\n      } finally {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (request.abortSignal) {\n          request.abortSignal.onabort = null;\n        }\n      }\n      if (!response.ok) {\n        const errorMessage = yield deserializeContent(response, \"text\");\n        throw new HttpError(errorMessage || response.statusText, response.status);\n      }\n      const content = deserializeContent(response, request.responseType);\n      const payload = yield content;\n      return new HttpResponse(response.status, response.statusText, payload);\n    })();\n  }\n  getCookieString(url) {\n    let cookies = \"\";\n    if (Platform.isNode && this._jar) {\n      // @ts-ignore: unused variable\n      this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\n    }\n    return cookies;\n  }\n}\nfunction deserializeContent(response, responseType) {\n  let content;\n  switch (responseType) {\n    case \"arraybuffer\":\n      content = response.arrayBuffer();\n      break;\n    case \"text\":\n      content = response.text();\n      break;\n    case \"blob\":\n    case \"document\":\n    case \"json\":\n      throw new Error(`${responseType} is not supported.`);\n    default:\n      content = response.text();\n      break;\n  }\n  return content;\n}","map":{"version":3,"names":["AbortError","HttpError","TimeoutError","HttpClient","HttpResponse","LogLevel","Platform","getGlobalThis","isArrayBuffer","configureAbortController","configureFetch","FetchHttpClient","constructor","logger","_logger","fetchObj","_fetchType","undefined","_jar","fetch","bind","_abortControllerType","AbortController","abortObj","send","request","_this","_asyncToGenerator","abortSignal","aborted","method","Error","url","abortController","error","onabort","abort","timeoutId","timeout","msTimeout","setTimeout","log","Warning","content","headers","response","body","cache","credentials","withCredentials","mode","redirect","signal","e","clearTimeout","ok","errorMessage","deserializeContent","statusText","status","responseType","payload","getCookieString","cookies","isNode","getCookies","c","join","arrayBuffer","text"],"sources":["D:/Projects/ChatApplication/FrontEnd/ClientApp/node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nimport { configureAbortController, configureFetch } from \"./DynamicImports\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        // This is how you do \"reference\" arguments\r\n        const fetchObj = { _fetchType: undefined, _jar: undefined };\r\n        if (configureFetch(fetchObj)) {\r\n            this._fetchType = fetchObj._fetchType;\r\n            this._jar = fetchObj._jar;\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        this._abortControllerType = AbortController;\r\n        const abortObj = { _abortControllerType: this._abortControllerType };\r\n        if (configureAbortController(abortObj)) {\r\n            this._abortControllerType = abortObj._abortControllerType;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}